{"ast":null,"code":"var _jsxFileName = \"/Users/hariharan/Desktop/projects/frontend/src/components/Screens/UserListScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../Loader';\nimport Message from '../Message';\nimport { listUsers } from '../../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserListScreen(_ref) {\n  _s();\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n\n  // const userLogin = useSelector(state => state.userLogin)\n  // const { userInfo } = userLogin\n\n  // const userDelete = useSelector(state => state.userDelete)\n  // const { success: successDelete } = userDelete\n\n  // useEffect(() => {\n  //     if (userInfo && userInfo.isAdmin) {\n  //         dispatch(listUsers())\n  //     } else {\n  //         history.push('/login')\n  //     }\n\n  // }, [dispatch, history, successDelete, userInfo])\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n\n  // const deleteHandler = (id) => {\n\n  //     if (window.confirm('Are you sure you want to delete this user?')) {\n  //         dispatch(deleteUser(id))\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(UserListScreen, \"+TOZS+45e+au/c9E1I6+WzRrxaY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserListScreen;\nexport default UserListScreen;\nvar _c;\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"names":["React","useState","useEffect","LinkContainer","Table","Button","useDispatch","useSelector","Loader","Message","listUsers","UserListScreen","history","dispatch","userList","state","loading","error","users"],"sources":["/Users/hariharan/Desktop/projects/frontend/src/components/Screens/UserListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../Loader'\nimport Message from '../Message'\nimport { listUsers } from '../../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    // const userLogin = useSelector(state => state.userLogin)\n    // const { userInfo } = userLogin\n\n    // const userDelete = useSelector(state => state.userDelete)\n    // const { success: successDelete } = userDelete\n\n\n    // useEffect(() => {\n    //     if (userInfo && userInfo.isAdmin) {\n    //         dispatch(listUsers())\n    //     } else {\n    //         history.push('/login')\n    //     }\n\n    // }, [dispatch, history, successDelete, userInfo])\n    useEffect(() => {\n        dispatch(listUsers())\n    },[dispatch])\n\n    // const deleteHandler = (id) => {\n\n    //     if (window.confirm('Are you sure you want to delete this user?')) {\n    //         dispatch(deleteUser(id))\n    //     }\n    // }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {/* {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )} */}\n        </div>\n    )\n}\n\nexport default UserListScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,SAAS,QAAQ,2BAA2B;AAAA;AAErD,SAASC,cAAc,OAAc;EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC;EAE/B,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EACrD,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGJ,QAAQ;;EAE1C;EACA;;EAEA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAZ,SAAS,CAAC,MAAM;IACZW,QAAQ,CAACH,SAAS,EAAE,CAAC;EACzB,CAAC,EAAC,CAACG,QAAQ,CAAC,CAAC;;EAEb;;EAEA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAc;IAAA;IAAA;IAAA;EAAA,QA6CZ;AAEd;AAAC,GAlFQF,cAAc;EAAA,QAEFL,WAAW,EAEXC,WAAW;AAAA;AAAA,KAJvBI,cAAc;AAoFvB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}