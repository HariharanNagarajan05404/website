{"ast":null,"code":"var _jsxFileName = \"/Users/hariharan/Desktop/test project/frontend/src/components/Screens/CartScreen.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react'\n// import { Link } from 'react-router-dom'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\n// import Message from '../Message'\n// import { addToCart, removeFromCart } from '../../actions/cartActions'\n\n// function CartScreen({ match, location, history }) {\n//     const productId = match.params.id\n//     const qty = location.search ? Number(location.search.split('=')[1]) : 1\n//     const dispatch = useDispatch()\n\n//     const cart = useSelector(state => state.cart)\n//     const { cartItems } = cart\n\n//     useEffect(() => {\n//         if (productId) {\n//             dispatch(addToCart(productId, qty))\n//         }\n//     }, [dispatch, productId, qty])\n\n//     const removeFromCartHandler = (id) => {\n//         dispatch(removeFromCart(id))\n//     }\n\n//     const checkoutHandler = () => {\n//         history.push('/login?redirect=shipping')\n//     }\n\n//     return (\n//         <Row>\n//             <Col md={8}>\n//                 <h1>Shopping Cart</h1>\n//                 {cartItems.length === 0 ? (\n//                     <Message variant='info'>\n//                         Your cart is empty <Link to='/'>Go Back</Link>\n//                     </Message>\n//                 ) : (\n//                         <ListGroup variant='flush'>\n//                             {cartItems.map(item => (\n//                                 <ListGroup.Item key={item.product}>\n//                                     <Row>\n//                                         <Col md={2}>\n//                                             <Image src={item.image} alt={item.name} fluid rounded />\n//                                         </Col>\n//                                         <Col md={3}>\n//                                             <Link to={`/product/${item.product}`}>{item.name}</Link>\n//                                         </Col>\n\n//                                         <Col md={2}>\n//                                             ${item.price}\n//                                         </Col>\n\n//                                         <Col md={3}>\n//                                             <Form.Control\n//                                                 as=\"select\"\n//                                                 value={item.qty}\n//                                                 onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n//                                             >\n//                                                 {\n\n//                                                     [...Array(item.countInStock).keys()].map((x) => (\n//                                                         <option key={x + 1} value={x + 1}>\n//                                                             {x + 1}\n//                                                         </option>\n//                                                     ))\n//                                                 }\n\n//                                             </Form.Control>\n//                                         </Col>\n\n//                                         <Col md={1}>\n//                                             <Button\n//                                                 type='button'\n//                                                 variant='light'\n//                                                 onClick={() => removeFromCartHandler(item.product)}\n//                                             >\n//                                                 <i className='fas fa-trash'></i>\n//                                             </Button>\n//                                         </Col>\n//                                     </Row>\n//                                 </ListGroup.Item>\n//                             ))}\n//                         </ListGroup>\n//                     )}\n//             </Col>\n\n//             <Col md={4}>\n//                 <Card>\n//                     <ListGroup variant='flush'>\n//                         <ListGroup.Item>\n//                             <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n//                             ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n//                         </ListGroup.Item>\n//                     </ListGroup>\n\n//                     <ListGroup.Item>\n//                         <Button\n//                             type='button'\n//                             className='btn-block'\n//                             disabled={cartItems.length === 0}\n//                             onClick={checkoutHandler}\n//                         >\n//                             Proceed To Checkout\n//                         </Button>\n//                     </ListGroup.Item>\n\n//                 </Card>\n//             </Col>\n//         </Row>\n//     )\n// }\n\n// export default CartScreen\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../Message';\nimport { addToCart, removeFromCart } from '../../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CartScreen(_ref) {\n  _s();\n  let {\n    match,\n    location,\n    history\n  } = _ref;\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(CartScreen, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = CartScreen;\nexport default CartScreen;\nvar _c;\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","removeFromCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch"],"sources":["/Users/hariharan/Desktop/test project/frontend/src/components/Screens/CartScreen.js"],"sourcesContent":["// import React, { useEffect } from 'react'\n// import { Link } from 'react-router-dom'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\n// import Message from '../Message'\n// import { addToCart, removeFromCart } from '../../actions/cartActions'\n\n// function CartScreen({ match, location, history }) {\n//     const productId = match.params.id\n//     const qty = location.search ? Number(location.search.split('=')[1]) : 1\n//     const dispatch = useDispatch()\n\n//     const cart = useSelector(state => state.cart)\n//     const { cartItems } = cart\n\n//     useEffect(() => {\n//         if (productId) {\n//             dispatch(addToCart(productId, qty))\n//         }\n//     }, [dispatch, productId, qty])\n\n\n//     const removeFromCartHandler = (id) => {\n//         dispatch(removeFromCart(id))\n//     }\n\n//     const checkoutHandler = () => {\n//         history.push('/login?redirect=shipping')\n//     }\n\n//     return (\n//         <Row>\n//             <Col md={8}>\n//                 <h1>Shopping Cart</h1>\n//                 {cartItems.length === 0 ? (\n//                     <Message variant='info'>\n//                         Your cart is empty <Link to='/'>Go Back</Link>\n//                     </Message>\n//                 ) : (\n//                         <ListGroup variant='flush'>\n//                             {cartItems.map(item => (\n//                                 <ListGroup.Item key={item.product}>\n//                                     <Row>\n//                                         <Col md={2}>\n//                                             <Image src={item.image} alt={item.name} fluid rounded />\n//                                         </Col>\n//                                         <Col md={3}>\n//                                             <Link to={`/product/${item.product}`}>{item.name}</Link>\n//                                         </Col>\n\n//                                         <Col md={2}>\n//                                             ${item.price}\n//                                         </Col>\n\n//                                         <Col md={3}>\n//                                             <Form.Control\n//                                                 as=\"select\"\n//                                                 value={item.qty}\n//                                                 onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n//                                             >\n//                                                 {\n\n//                                                     [...Array(item.countInStock).keys()].map((x) => (\n//                                                         <option key={x + 1} value={x + 1}>\n//                                                             {x + 1}\n//                                                         </option>\n//                                                     ))\n//                                                 }\n\n//                                             </Form.Control>\n//                                         </Col>\n\n//                                         <Col md={1}>\n//                                             <Button\n//                                                 type='button'\n//                                                 variant='light'\n//                                                 onClick={() => removeFromCartHandler(item.product)}\n//                                             >\n//                                                 <i className='fas fa-trash'></i>\n//                                             </Button>\n//                                         </Col>\n//                                     </Row>\n//                                 </ListGroup.Item>\n//                             ))}\n//                         </ListGroup>\n//                     )}\n//             </Col>\n\n//             <Col md={4}>\n//                 <Card>\n//                     <ListGroup variant='flush'>\n//                         <ListGroup.Item>\n//                             <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n//                             ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n//                         </ListGroup.Item>\n//                     </ListGroup>\n\n//                     <ListGroup.Item>\n//                         <Button\n//                             type='button'\n//                             className='btn-block'\n//                             disabled={cartItems.length === 0}\n//                             onClick={checkoutHandler}\n//                         >\n//                             Proceed To Checkout\n//                         </Button>\n//                     </ListGroup.Item>\n\n\n//                 </Card>\n//             </Col>\n//         </Row>\n//     )\n// }\n\n// export default CartScreen\n\n\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../Message'\nimport { addToCart, removeFromCart } from '../../actions/cartActions'\n\n\nfunction CartScreen({match,location,history}) {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n      useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default CartScreen\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAChF,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,SAAS,EAAEC,cAAc,QAAQ,2BAA2B;AAAA;AAGrE,SAASC,UAAU,OAA2B;EAAA;EAAA,IAA1B;IAACC,KAAK;IAACC,QAAQ;IAACC;EAAO,CAAC;EAC1C,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAACC,EAAE;EACjC,MAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAM,GAAGC,MAAM,CAACP,QAAQ,CAACM,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAErE,MAAMC,QAAQ,GAAGvB,WAAW,EAAE;EAE5BF,SAAS,CAAC,MAAM;IACd,IAAIkB,SAAS,EAAE;MACXO,QAAQ,CAACb,SAAS,CAACM,SAAS,EAAEG,GAAG,CAAC,CAAC;IACvC;EACJ,CAAC,EAAE,CAACI,QAAQ,EAAEP,SAAS,EAAEG,GAAG,CAAC,CAAC;EAEhC,oBACE;IAAA;IAAA;IAAA;EAAA,QAEM;AAEV;AAAC,GAjBQP,UAAU;EAAA,QAIEZ,WAAW;AAAA;AAAA,KAJvBY,UAAU;AAmBnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}