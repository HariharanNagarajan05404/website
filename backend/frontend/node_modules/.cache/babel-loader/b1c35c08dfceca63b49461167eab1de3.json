{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      header: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"api/shopping/users/login\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","login","email","password","dispatch","type","config","header","data","post","username","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","headers","detail"],"sources":["/Users/hariharan/Desktop/projects/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      header: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"api/shopping/users/login\",\n      { username: email, password: password },\n      config\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n      dispatch({\n          type: USER_REGISTER_REQUEST\n      })\n\n      const config = {\n          headers: {\n              'Content-type': 'application/json'\n          }\n      }\n\n      const { data } = await axios.post(\n          '/api/users/register/',\n          { 'name': name, 'email': email, 'password': password },\n          config\n      )\n\n      dispatch({\n          type: USER_REGISTER_SUCCESS,\n          payload: data\n      })\n\n      dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data\n      })\n\n      localStorage.setItem('userInfo', JSON.stringify(data))\n\n  } catch (error) {\n      dispatch({\n          type: USER_REGISTER_FAIL,\n          payload: error.response && error.response.data.detail\n              ? error.response.data.detail\n              : error.message,\n      })\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,EACXC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,QACb,4BAA4B;AAEnC,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEX;IACR,CAAC,CAAC;IAEF,MAAMY,MAAM,GAAG;MACbC,MAAM,EAAE;QACN,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,0BAA0B,EAC1B;MAAEC,QAAQ,EAAER,KAAK;MAAEC,QAAQ,EAAEA;IAAS,CAAC,EACvCG,MAAM,CACP;IACDF,QAAQ,CAAC;MACPC,IAAI,EAAEV,kBAAkB;MACxBgB,OAAO,EAAEH;IACX,CAAC,CAAC;IACFI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAET,eAAe;MACrBe,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOf,QAAQ,IAAK;EACxCQ,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnChB,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAY,CAAC,CAAC;AACjC,CAAC;AACD,OAAO,MAAMwB,QAAQ,GAAG,CAACC,IAAI,EAAEpB,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACrE,IAAI;IACAA,QAAQ,CAAC;MACLC,IAAI,EAAEP;IACV,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG;MACXiB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAAEf;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC7B,sBAAsB,EACtB;MAAE,MAAM,EAAEa,IAAI;MAAE,OAAO,EAAEpB,KAAK;MAAE,UAAU,EAAEC;IAAS,CAAC,EACtDG,MAAM,CACT;IAEDF,QAAQ,CAAC;MACLC,IAAI,EAAEN,qBAAqB;MAC3BY,OAAO,EAAEH;IACb,CAAC,CAAC;IAEFJ,QAAQ,CAAC;MACLC,IAAI,EAAEV,kBAAkB;MACxBgB,OAAO,EAAEH;IACb,CAAC,CAAC;IAEFI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EAE1D,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZZ,QAAQ,CAAC;MACLC,IAAI,EAAEL,kBAAkB;MACxBW,OAAO,EAAEK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACgB,MAAM,GAC/CR,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACgB,MAAM,GAC1BR,KAAK,CAACE;IAChB,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module"}