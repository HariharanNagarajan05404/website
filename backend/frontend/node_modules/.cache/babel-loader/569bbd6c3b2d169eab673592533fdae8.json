{"ast":null,"code":"var _jsxFileName = \"/Users/hariharan/Desktop/projects/frontend/src/components/Screens/ProductEditScreen.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Form, Button } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Loader from \"../Loader\";\n// import Message from \"../Message\";\n// import FormContainer from \"../FormContainer\";\n// import axios from \"axios\";\n// import {\n//   listProductDetails,\n//   updateProduct,\n// } from \"../../actions/productActions\";\n// import { PRODUCT_UPDATE_RESET } from \"../../constants/productconstants\";\n\n// function ProductEditScreen({ match, history }) {\n//   const productId = match.params.id;\n\n//   const [name, setName] = useState(\"\");\n//   const [price, setPrice] = useState(0);\n//   const [image, setImage] = useState(\"\");\n//   const [countInStock, setCountInStock] = useState(0);\n//   const [description, setDescription] = useState(\"\");\n//   const [uploading, setUploading] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { error, loading, product } = productDetails;\n\n//   const productUpdate = useSelector((state) => state.productUpdate);\n//   const {\n//     error: errorUpdate,\n//     loading: loadingUpdate,\n//     success: successUpdate,\n//   } = productUpdate;\n\n//   useEffect(() => {\n//     if (successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET });\n//       history.push(\"/admin/productlist\");\n//     } else {\n//       if (!product.name || product._id !== Number(productId)) {\n//         dispatch(listProductDetails(productId));\n//       } else {\n//         setName(product.name);\n//         setPrice(product.price);\n//         setImage(product.image);\n//         setCountInStock(product.countInStock);\n//         setDescription(product.description);\n//       }\n//     }\n//   }, [dispatch, product, productId, history, successUpdate]);\n//   //user, userId, successUpdate, history\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       updateProduct({\n//         _id: productId,\n//         name,\n//         price,\n//         image,\n//         countInStock,\n//         description,\n//       })\n//     );\n//   };\n//   const uploadFileHandler = async (e) => {\n//     console.log(\"File is uploading\")\n//   }\n\n//   return (\n//     <div>\n//       <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n//         Go Back\n//       </Link>\n\n//       <FormContainer>\n//         <h1>Edit Product</h1>\n//         {loadingUpdate && <Loader />}\n//         {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n//         {loading ? (\n//           <Loader />\n//         ) : error ? (\n//           <Message variant=\"danger\">{error}</Message>\n//         ) : (\n//           <Form onSubmit={submitHandler}>\n//             <br />\n//             <Form.Group controlId=\"name\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Name\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"name\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <br />\n//             <Form.Group controlId=\"price\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Price\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Enter price\"\n//                 value={price}\n//                 onChange={(e) => setPrice(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <br />\n//             <Form.Group controlId=\"image\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Image\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter image\"\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></Form.Control>\n\n//             </Form.Group>\n\n//             <Form.Group controlId=\"countInStock\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> CountInStock\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Enter the CountInStock\"\n//                 value={countInStock}\n//                 onChange={(e) => setCountInStock(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <br />\n//             <Form.Group controlId=\"description\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Description\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter Description\"\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             <br />\n//             <Button type=\"submit\" variant=\"primary\">\n//               Update\n//             </Button>\n//           </Form>\n//         )}\n//       </FormContainer>\n//     </div>\n//   );\n// }\n\n// export default ProductEditScreen;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../Loader';\nimport Message from '../Message';\nimport FormContainer from '../FormContainer';\nimport { listProductDetails, updateProduct } from '../../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productconstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductEditScreen(_ref) {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    error,\n    loading,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      countInStock,\n      description\n    }));\n  };\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('product_id', productId);\n    setUploading(true);\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/shopping/products/upload/', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countinstock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductEditScreen, \"6xjR7c5Fk2CsdE4WtyuUWvuUlB4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ProductEditScreen;\nexport default ProductEditScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","error","loading","product","productUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","value"],"sources":["/Users/hariharan/Desktop/projects/frontend/src/components/Screens/ProductEditScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Form, Button } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Loader from \"../Loader\";\n// import Message from \"../Message\";\n// import FormContainer from \"../FormContainer\";\n// import axios from \"axios\";\n// import {\n//   listProductDetails,\n//   updateProduct,\n// } from \"../../actions/productActions\";\n// import { PRODUCT_UPDATE_RESET } from \"../../constants/productconstants\";\n\n// function ProductEditScreen({ match, history }) {\n//   const productId = match.params.id;\n\n//   const [name, setName] = useState(\"\");\n//   const [price, setPrice] = useState(0);\n//   const [image, setImage] = useState(\"\");\n//   const [countInStock, setCountInStock] = useState(0);\n//   const [description, setDescription] = useState(\"\");\n//   const [uploading, setUploading] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { error, loading, product } = productDetails;\n\n//   const productUpdate = useSelector((state) => state.productUpdate);\n//   const {\n//     error: errorUpdate,\n//     loading: loadingUpdate,\n//     success: successUpdate,\n//   } = productUpdate;\n\n//   useEffect(() => {\n//     if (successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET });\n//       history.push(\"/admin/productlist\");\n//     } else {\n//       if (!product.name || product._id !== Number(productId)) {\n//         dispatch(listProductDetails(productId));\n//       } else {\n//         setName(product.name);\n//         setPrice(product.price);\n//         setImage(product.image);\n//         setCountInStock(product.countInStock);\n//         setDescription(product.description);\n//       }\n//     }\n//   }, [dispatch, product, productId, history, successUpdate]);\n//   //user, userId, successUpdate, history\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       updateProduct({\n//         _id: productId,\n//         name,\n//         price,\n//         image,\n//         countInStock,\n//         description,\n//       })\n//     );\n//   };\n//   const uploadFileHandler = async (e) => {\n//     console.log(\"File is uploading\")\n//   }\n\n//   return (\n//     <div>\n//       <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n//         Go Back\n//       </Link>\n\n//       <FormContainer>\n//         <h1>Edit Product</h1>\n//         {loadingUpdate && <Loader />}\n//         {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n//         {loading ? (\n//           <Loader />\n//         ) : error ? (\n//           <Message variant=\"danger\">{error}</Message>\n//         ) : (\n//           <Form onSubmit={submitHandler}>\n//             <br />\n//             <Form.Group controlId=\"name\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Name\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"name\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <br />\n//             <Form.Group controlId=\"price\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Price\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Enter price\"\n//                 value={price}\n//                 onChange={(e) => setPrice(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <br />\n//             <Form.Group controlId=\"image\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Image\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter image\"\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></Form.Control>\n              \n              \n//             </Form.Group>\n            \n            \n//             <Form.Group controlId=\"countInStock\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> CountInStock\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"Enter the CountInStock\"\n//                 value={countInStock}\n//                 onChange={(e) => setCountInStock(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n//             <br />\n//             <Form.Group controlId=\"description\">\n//               <Form.Label>\n//                 <i class=\"fa-solid fa-signature\"></i> Description\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter Description\"\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             <br />\n//             <Button type=\"submit\" variant=\"primary\">\n//               Update\n//             </Button>\n//           </Form>\n//         )}\n//       </FormContainer>\n//     </div>\n//   );\n// }\n\n// export default ProductEditScreen;\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../Loader'\nimport Message from '../Message'\nimport FormContainer from '../FormContainer'\nimport { listProductDetails, updateProduct } from '../../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../../constants/productconstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    \n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                \n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n           \n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/shopping/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            \n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            \n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,kBAAkB,EAAEC,aAAa,QAAQ,8BAA8B;AAChF,SAASC,oBAAoB,QAAQ,kCAAkC;AAAA;AAGvE,SAASC,iBAAiB,OAAqB;EAAA;EAAA,IAApB;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAEzC,MAAMC,SAAS,GAAGF,KAAK,CAACG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"},"metadata":{},"sourceType":"module"}